// <auto-generated />
using System;
using CartApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CartApp.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211129115731_update")]
    partial class update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CartApp.Models.Cart", b =>
                {
                    b.Property<Guid>("cartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double>("totalPrice")
                        .HasColumnType("double");

                    b.HasKey("cartId");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            cartId = new Guid("acb22d7c-347d-4fe2-8222-a14498817f49"),
                            totalPrice = 0.0
                        });
                });

            modelBuilder.Entity("CartApp.Models.Product", b =>
                {
                    b.Property<Guid>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("availableQuantity")
                        .HasColumnType("int");

                    b.Property<Guid>("cartId")
                        .HasColumnType("char(36)");

                    b.Property<string>("category")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("price")
                        .HasColumnType("double");

                    b.HasKey("productId");

                    b.HasIndex("cartId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            productId = new Guid("22d4939a-0376-4bd6-aa59-60b55447afbd"),
                            availableQuantity = 100,
                            cartId = new Guid("acb22d7c-347d-4fe2-8222-a14498817f49"),
                            category = "Clothes",
                            description = "Blue shirt",
                            price = 100.0
                        },
                        new
                        {
                            productId = new Guid("f24f9b4c-dbed-45d2-b75e-79e513a9080f"),
                            availableQuantity = 140,
                            cartId = new Guid("acb22d7c-347d-4fe2-8222-a14498817f49"),
                            category = "Clothes",
                            description = "Red pants",
                            price = 100.0
                        },
                        new
                        {
                            productId = new Guid("3d9b4939-b0fc-4157-a99c-5cb10912af63"),
                            availableQuantity = 500,
                            cartId = new Guid("acb22d7c-347d-4fe2-8222-a14498817f49"),
                            category = "Accessories",
                            description = "Earings",
                            price = 100.0
                        },
                        new
                        {
                            productId = new Guid("ce278e37-4746-485e-b5fb-8efdc9c12411"),
                            availableQuantity = 1000,
                            cartId = new Guid("acb22d7c-347d-4fe2-8222-a14498817f49"),
                            category = "Accessories",
                            description = "Glasses",
                            price = 100.0
                        },
                        new
                        {
                            productId = new Guid("2937f765-4672-4f59-b61e-3032c3f4b9a8"),
                            availableQuantity = 50,
                            cartId = new Guid("acb22d7c-347d-4fe2-8222-a14498817f49"),
                            category = "Clothes",
                            description = "Hat",
                            price = 100.0
                        });
                });

            modelBuilder.Entity("CartApp.Models.Product", b =>
                {
                    b.HasOne("CartApp.Models.Cart", null)
                        .WithMany("products")
                        .HasForeignKey("cartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CartApp.Models.Cart", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
