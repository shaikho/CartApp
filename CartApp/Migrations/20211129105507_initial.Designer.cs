// <auto-generated />
using System;
using CartApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CartApp.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20211129105507_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CartApp.Models.Cart", b =>
                {
                    b.Property<Guid>("cartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<double>("totalPrice")
                        .HasColumnType("double");

                    b.HasKey("cartId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("CartApp.Models.Product", b =>
                {
                    b.Property<Guid>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("availableQuantity")
                        .HasColumnType("int");

                    b.Property<int>("cartId")
                        .HasColumnType("int");

                    b.Property<Guid?>("cartId1")
                        .HasColumnType("char(36)");

                    b.Property<string>("category")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<double>("price")
                        .HasColumnType("double");

                    b.HasKey("productId");

                    b.HasIndex("cartId1");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("CartApp.Models.Product", b =>
                {
                    b.HasOne("CartApp.Models.Cart", null)
                        .WithMany("products")
                        .HasForeignKey("cartId1");
                });

            modelBuilder.Entity("CartApp.Models.Cart", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
